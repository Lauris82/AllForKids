<?php

namespace PIdev\AllforkidsBundle\Repository;

/**
 * EvenementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EvenementRepository extends \Doctrine\ORM\EntityRepository
{
    public function anciensEvenements()
    {
        $p=$this->getEntityManager()->createQuery('SELECT e FROM PIdevAllforkidsBundle:Evenement e WHERE e.dateFin< CURRENT_DATE ()');
        return $p->getResult();
    }
    public function toutesEvenements()
    {
        $p=$this->getEntityManager()->createQuery('SELECT e FROM PIdevAllforkidsBundle:Evenement e WHERE e.etat =0 ORDER BY e.dateDebut');
        return $p->getResult();
    }
    public function RechercheEvenements($nom)
    {
        $p=$this->getEntityManager()->createQuery('SELECT e FROM PIdevAllforkidsBundle:Evenement e WHERE e.nom LIKE :nom and e.etat =0 ORDER BY e.dateDebut')
            ->setParameter('nom','%'.$nom.'%');
        return $p->getResult();
    }
    public function evenementReserver($usr)
    {


        $p=$this->getEntityManager()
            ->createQuery('select e from PIdevAllforkidsBundle:Evenement e JOIN PIdevAllforkidsBundle:Reservation r where  r.evenement=e.id_evenement and r.user=:usr and e.etat =0 ')->setParameter('usr',$usr)
            ;
        return $p->getResult();
    }





   public function evenementNonReserver($ev)
    {

        $query=$this->createQueryBuilder('a')
                ->where('a.');
       $p=$this->getEntityManager()
           // ->createQuery('select e from PIdevAllforkidsBundle:Evenement e   WHERE  e.id_evenement  not IN (ev["id_evenement"])  ')
       //    ->setParameter('ev',$ev)
        ;
        return $p->getResult();

}



    public function EvenementActualitee()
    {
        $q=$this->getEntityManager()
            ->createQuery("SELECT g FROM PIdevAllforkidsBundle:Evenement g  ORDER BY g.id_evenement DESC ");
        return $q->getFirstResult();
    }
}
